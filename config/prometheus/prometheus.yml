# my global config
global:
  scrape_interval:     15s # By default, scrape targets every 15 seconds.
  evaluation_interval: 15s # By default, scrape targets every 15 seconds.
  # scrape_timeout is set to the global default (10s).

  # Attach these labels to any time series or alerts when communicating with
  # external systems (federation, remote storage, Alertmanager).
  external_labels:
    monitor: 'workshop'

# Load and evaluate rules in this file every 'evaluation_interval' seconds.
rule_files:
  - 'alert.rules'
  - 'nodes.rules'

# alert
alerting:
  alertmanagers:
  - scheme: http
    static_configs:
    - targets:
      - "alertmanager:9093"

# A scrape configuration containing exactly one endpoint to scrape:
# Here it's Prometheus itself.
scrape_configs:
  # The job name is added as a label `job=<job_name>` to any timeseries scraped from this config.

  # - job_name: app
  #   scrape_interval: 5s
  #   static_configs:
  #     - targets: ['host.docker.internal:8000']

  - job_name: 'node'
    scrape_interval: 5s
    static_configs:
      - targets: ['node-exporter:9100']

  - job_name: 'prometheus'
    # Override the global default and scrape targets from this job every 5 seconds.
    scrape_interval: 5s
    static_configs:
      - targets: ['localhost:9090']

  - job_name: 'kafka'
    # metrics_path defaults to '/metrics'
    # scheme defaults to 'http'.
    scrape_interval: 30s
    static_configs:
      - targets: ['jmx-kafka:5556']

  - job_name: 'spark-master'
    scrape_interval: 10s
    metrics_path: '/metrics/master/prometheus'
    static_configs:
      - targets: ['spark:8080']
        labels:
          group:  'spark'
          instance: 'master'

  - job_name: 'spark-worker'
    scrape_interval: 10s
    metrics_path: '/metrics/prometheus'
    static_configs:
      - targets: ['spark-worker:8081']
        labels:
          group:  'spark'
          instance: 'worker'

  - job_name: 'spark-applications'
    scrape_interval: 10s
    metrics_path: '/metrics/applications/prometheus'
    static_configs:
      - targets: ['spark:8080']
        labels:
          group:  'spark'
          instance: 'applications'

  - job_name: 'spark-driver'
    scrape_interval: 10s
    metrics_path: '/metrics/prometheus/'
    static_configs:
      - targets: ['spark:9099']
        labels:
          group:  'spark'
          instance: 'driver'

remote_write:
  - url: 'http://grafana:3000'
    authorization:
      type: 'Bearer'
      credentials: 'eyJrIjoiNnRTWjFGcHRmY0R0OTIweWs4d3FpeTI4MDFZQjFEQlQiLCJuIjoicHJvbWV0aGV1c193cml0ZXIiLCJpZCI6MX0='